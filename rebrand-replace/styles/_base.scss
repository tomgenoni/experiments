@import "./reset";
@import "./includes/z-index";
@import "./includes/mixins";
@import "@thumbtack/thumbprint-tokens/dist/scss/_index";
@import '@thumbtack/tp-ui-core-mixin/_index';

@charset "UTF-8";

html {
    height: 100%;
}

body {
    min-width: 320px;
    min-height: 100%;
}

html, body {
    text-size-adjust: 100%;
}

html.noscroll,
body.noscroll {
    overflow: hidden !important;
}

html.noscroll body:not(.noscroll) {
    overflow-x: hidden !important;
    // Force body vertical scrollbar to remain, in order to prevent content twitching from width
    // changes. Child scrollbar overlays and hides body's
    overflow-y: scroll !important;
}


@include tp-respond-below($tp-breakpoint__medium) {
    html.noscroll-mobile,
    body.noscroll-mobile {
        overflow: hidden !important;
    }

    html.noscroll-mobile body:not(.noscroll-mobile) {
        overflow-x: hidden !important;
        overflow-y: scroll !important;
    }
}

// TODO(EV): Find a more suitable place to do this, along with all the inline styles
// for the banner iframe on `website/template/twig/global_head.html`
// injecting css into the iframe wasn't solving the stacking order for the iframe and modal
#branch-banner-iframe {
    z-index: get-z-for(modal) - 1 !important;
}

// TODO: These classes are for consistency with the Primo modals; once
// Primo is deprecated completely (or at least any place where we'd use modals)
// se can rename these classes to something more in-line with Thumbprint conventions.
.curtain-mobile-container {
    background: black;

    > * {
        display: none !important;
    }

    .curtain-visible {
        display: block !important;
    }
}

// Hide the rouge pinterest tracking pixel.
img[src*="ct.pinterest.com"] {
    display: none;
}

/* Directives from Angular CSP CSS file(s) since Thumbtack uses CSP
 * Without these the site will function in unpredictable ways.
 * https://code.angularjs.org/1.2.28/docs/api/ng/directive/ngHide
 * https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.2.28/angular-csp.css
 */

[ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak, .ng-hide {
    display: none !important;
}

ng\:form {
    display: block;
}

.ng-animate-block-transitions {
    transition:0s all!important;
    -webkit-transition:0s all!important;
}

/* show the element during a show/hide animation when the
 * animation is ongoing, but the .ng-hide class is active */
.ng-hide-add-active, .ng-hide-remove {
    display: block!important;
}
