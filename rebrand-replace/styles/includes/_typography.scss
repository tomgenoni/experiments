@import "../fonts/includes/fonts";
@import "./color";
@import "./breakpoints.json";

$pageBreakpoints: map-get($breakpoints, "page");

$systemFallbacks: (Arial, sans-serif);
$AvenirMediumStack: (AvenirNext-Medium, AvenirNext-Regular, $systemFallbacks);
$AvenirRegularStack: (AvenirNext-Regular, $systemFallbacks);
$AvenirDemiStack: (AvenirNext-Demi, AvenirNext-Regular, $systemFallbacks);

@mixin generateThemeSecondary() {
    &.theme-secondary {
        color: $tp-color__black-300;
    }
}

@mixin generateThemeTertiary() {
    &.theme-tertiary {
        color: $tp-color__gray;
    }
}

@mixin generateThemeInverted() {
    &.theme-inverted {
        color: $tp-color__white;
    }
}

@mixin generateThemeCaution() {
    &.theme-caution {
        color: $tp-color__red;
    }
}

@mixin generateThemeSuccess() {
    &.theme-success {
        color: $tp-color__green;
    }
}

@mixin generateThemeHighlight() {
    &.theme-highlight {
        color: $thumbtack-orange;
    }
}

@mixin generateThemeEqualLineHeight() {
    &.theme-equal-line-height {
        line-height: 1;
    }
}

@mixin generatePropertiesFromSpecMap($specs, $level) {
    $spec: map_get($specs, $level);
    @if ($spec) {
        @each $property, $property-value in $spec {
            #{$property}: $property-value;
        }
    }
}

@mixin generateTypeRuleForLevel($desktopSpecs, $mobileSpecs, $level, $responsive, $typeName) {
    @if (not map-has-key($desktopSpecs, $level)) {
        @warn "Level '#{$level}' is not defined for #{$typeName} typography.";
    }

    @include generatePropertiesFromSpecMap($desktopSpecs, $level);

    @if ($responsive) {
        @media (max-width: map-get($pageBreakpoints, "sm")) {
            @include generatePropertiesFromSpecMap($mobileSpecs, $level);
        }
    }
}

// Generate the rules for a Heading Style
// $level - The number for the level
// $media - "all", "desktop", "mobile"
@mixin generateHeadingTypeRule($level, $responsive: true) {
    $desktopSpecs: (
        1: (font-size: 48px, line-height: 56px, font-family: $AvenirMediumStack),
        2: (font-size: 40px, line-height: 48px, font-family: $AvenirMediumStack),
        3: (font-size: 32px, line-height: 40px, font-family: $AvenirMediumStack),
        4: (font-size: 24px, line-height: 32px, font-family: $AvenirMediumStack)
    );
    $mobileSpecs: (
        1: (font-size: 32px, line-height: 40px, font-family: $AvenirMediumStack),
        2: (font-size: 32px, line-height: 40px, font-family: $AvenirMediumStack),
        3: (font-size: 24px, line-height: 32px, font-family: $AvenirMediumStack),
        4: (font-size: 20px, line-height: 28px, font-family: $AvenirMediumStack)
    );

    @include generateTypeRuleForLevel($desktopSpecs, $mobileSpecs, $level, $responsive, "Heading");

    color: $tp-color__black;

    @include generateThemeSecondary();
    @include generateThemeTertiary();
    @include generateThemeInverted();
    @include generateThemeSuccess();
    @include generateThemeCaution();
    @include generateThemeHighlight();
    @include generateThemeEqualLineHeight();
}

// Generate the rules for a Title Style
// $level - The number for the level
// $media - "all", "desktop", "mobile"
@mixin generateTitleTypeRule($level, $responsive: true) {
    $desktopSpecs: (
        1: (font-size: 20px, line-height: 28px, font-family: $AvenirMediumStack),
        2: (font-size: 16px, line-height: 22px, font-family: $AvenirMediumStack),
        3: (font-size: 14px, line-height: 20px, font-family: $AvenirMediumStack),
        4: (font-size: 12px, line-height: 16px, font-family: $AvenirMediumStack),
        5: (font-size: 10px, line-height: 14px, font-family: $AvenirMediumStack)
    );
    $mobileSpecs: (
        1: (font-size: 16px, line-height: 22px, font-family: $AvenirMediumStack),
        2: (font-size: 14px, line-height: 20px, font-family: $AvenirMediumStack),
        3: (font-size: 12px, line-height: 16px, font-family: $AvenirMediumStack)
    );

    @include generateTypeRuleForLevel($desktopSpecs, $mobileSpecs, $level, $responsive, "Title");

    color: $tp-color__black;

    @include generateThemeSecondary();
    @include generateThemeTertiary();
    @include generateThemeInverted();
    @include generateThemeSuccess();
    @include generateThemeCaution();
    @include generateThemeHighlight();
    @include generateThemeEqualLineHeight();
}

// Generate the rules for a Body Style
// $level - The number for the level
// $media - "all", "desktop", "mobile"
// TODO(THPR-119): B6 rule to be inserted at the correct place in hierarchy
@mixin generateBodyTypeRule($level, $responsive: true) {
    $desktopSpecs: (
        1: (font-size: 24px, line-height: 32px, font-family: $AvenirRegularStack),
        2: (font-size: 16px, line-height: 22px, font-family: $AvenirRegularStack),
        3: (font-size: 14px, line-height: 20px, font-family: $AvenirRegularStack),
        4: (font-size: 12px, line-height: 16px, font-family: $AvenirRegularStack),
        5: (font-size: 10px, line-height: 14px, font-family: $AvenirRegularStack),
        6: (font-size: 20px, line-height: 28px, font-family: $AvenirRegularStack)
    );
    $mobileSpecs: (
        1: (font-size: 20px, line-height: 28px, font-family: $AvenirRegularStack),
        2: (font-size: 14px, line-height: 20px, font-family: $AvenirRegularStack),
        3: (font-size: 12px, line-height: 16px, font-family: $AvenirRegularStack),
        6: (font-size: 16px, line-height: 22px, font-family: $AvenirRegularStack)
    );

    @include generateTypeRuleForLevel($desktopSpecs, $mobileSpecs, $level, $responsive, "Body");

    color: $tp-color__black;

    @include generateThemeSecondary();
    @include generateThemeTertiary();
    @include generateThemeInverted();
    @include generateThemeSuccess();
    @include generateThemeCaution();
    @include generateThemeHighlight();
    @include generateThemeEqualLineHeight();
}
